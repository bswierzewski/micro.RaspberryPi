version: "3"
services:
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379

  db:
    container_name: db
    image: postgres:alpine
    environment:
      POSTGRES_DB: micro
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  watchtower:
    container_name: watchtower
    command: --label-enable --cleanup --interval 300
    image: containrrr/watchtower
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: none
    #restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 120

  socket:
    container_name: socket
    image: swierzewskibartosz/service_socket_io
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - redis
      - watchtower
    ports:
      - 3000:3000

  microcontroller:
    container_name: microcontroller
    image: swierzewskibartosz/service_microcontroller
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - watchtower
      - db
    ports: 
      - 5003:5003

  auth:
    container_name: auth
    image: swierzewskibartosz/service_authentication
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - watchtower
      - db    
    ports: 
      - 5001:5001
      
  backend:
    container_name: backend
    image: swierzewskibartosz/service_app
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - watchtower
      - db
    ports: 
      - 5002:5002

  broker:
    container_name: broker
    image: swierzewskibartosz/service_broker
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - watchtower
      - db

  frontend:
    container_name: frontend
    image: swierzewskibartosz/angular_spa
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - watchtower
    ports: 
      - 80:80
